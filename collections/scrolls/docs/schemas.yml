components:
  schemas:
    ScrollID:
      description: Scroll ID or unique slug.
      oneOf:
        - $ref: "../../../docs/common.yml#/components/schemas/UUID"
        - type: string

    ScrollAttributes:
      allOf:
        - $ref: "../../items/docs/schemas.yml#/components/schemas/ItemAttributes"
        - description: The fields associated with a scroll.
          type: object
          properties:
            start:
              $ref: "../../../docs/common.yml#/components/schemas/RandomizedString"
            notes:
              type: array
              items:
                $ref: "../../../docs/common.yml#/components/schemas/Note"

    ScrollResource:
      description: The full JSON:API resource describing a scroll.
      type: object
      required: [type, id]
      properties:
        type:
          type: string
          example: "scrolls"
        id:
          $ref: "../../../docs/common.yml#/components/schemas/UUID"
        attributes:
          $ref: "#/components/schemas/ScrollAttributes"
        relationships:
          $ref: "../../items/docs/schemas.yml#/components/schemas/AuthorsRelationship"

    ScrollResponse:
      description: A JSON:API response that returns a single scroll.
      type: object
      properties:
        jsonapi:
          $ref: "../../../docs/common.yml#/components/schemas/JSONAPIHeader"
        links:
          $ref: "../../../docs/common.yml#/components/schemas/Links"
        data:
          $ref: "#/components/schemas/ScrollResource"
        included:
          type: array
          items:
            $ref: "../../users/docs/schemas.yml#/components/schemas/IncludedUser"

    ScrollsResponse:
      description: A JSON:API response that returns a paginated list of scrolls.
      type: object
      properties:
        jsonapi:
          $ref: "../../../docs/common.yml#/components/schemas/JSONAPIHeader"
        links:
          $ref: "../../../docs/common.yml#/components/schemas/PaginatedLinks"
        data:
          type: array
          items:
            $ref: "#/components/schemas/ScrollResource"
        included:
          type: array
          items:
            $ref: "../../users/docs/schemas.yml#/components/schemas/IncludedUser"

    ScrollCreation:
      description: The object that a client must provide to create a new scroll.
      type: object
      required: [data]
      properties:
        data:
          type: object
          required: [type, attributes]
          properties:
            type:
              type: string
              example: "scrolls"
            attributes:
              allOf:
                - $ref: "../../items/docs/schemas.yml#/components/schemas/ItemAttributes"
                - description: The fields associated with a scroll.
                  required: [name, start]
                  type: object
                  properties:
                    start:
                      $ref: "../../../docs/common.yml#/components/schemas/RandomizedString"
                    notes:
                      type: array
                      items:
                        $ref: "../../../docs/common.yml#/components/schemas/Note"
            relationships:
              $ref: "../../items/docs/schemas.yml#/components/schemas/AuthorsRelationship"

    ScrollPatch:
      description: The object that a client must provide to update a scroll.
      type: object
      required: [data]
      properties:
        data:
          type: object
          required: [type, id, attributes]
          properties:
            type:
              type: string
              example: "scrolls"
            id:
              $ref: "../../../docs/common.yml#/components/schemas/UUID"
            attributes:
              allOf:
                - $ref: "../../items/docs/schemas.yml#/components/schemas/ItemAttributes"
                - description: The fields associated with a scroll.
                  type: object
                  properties:
                    start:
                      $ref: "../../../docs/common.yml#/components/schemas/RandomizedString"
                    notes:
                      type: array
                      items:
                        $ref: "../../../docs/common.yml#/components/schemas/Note"
            relationships:
              $ref: "../../items/docs/schemas.yml#/components/schemas/AuthorsRelationship"
